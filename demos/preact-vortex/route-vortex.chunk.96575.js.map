{"version":3,"sources":["webpack:///./routes/vortex/index.js","webpack:///./routes/vortex/style.css"],"names":["Cell","props","addBall","row","col","energyAsSaturation","this","cell","backgroundStyle","class","style","onMouseEnter","event","handleMouseEnter","Component","Row","cells","forEach","push","key","buildCols","Vortex","interval","balls","grid","xOffsetFromCentre","yOffsetFromCentre","radius","Math","sqrt","angleDegrees","atan2","PI","updatedBalls","state","concat","angle","energy","setState","rows","buildRows","setInterval","updateSimulation","clearInterval","a","length","ball","newRadius","updatedGrid","ballNum","radians","cos","trailingCol","trunc","trailingColEnergyPercent","leadingCol","leadingColEnergyPercent","sin","trailingRow","trailingRowEnergyPercent","leadingRow","leadingRowEnergyPercent"],"mappings":"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","file":"route-vortex.chunk.96575.js","sourcesContent":["import {Component} from 'preact';\n\nimport style from './style.css';\n\nclass Cell extends Component {\n    render () {\n        const energyAsSaturation = this.props.cell * 255;\n        let backgroundStyle = `background-color: rgb(${energyAsSaturation}, ${energyAsSaturation}, ${energyAsSaturation})`;\n        return (\n            <div\n                class={style.cell}\n                style={backgroundStyle}\n                cell={this.props.cell}\n                onMouseEnter={(event) => { this.handleMouseEnter(event); }}\n            />\n        );\n    }\n\n    handleMouseEnter = () => {\n        this.props.addBall(this.props.row, this.props.col);\n    }\n}\n\n\nclass Row extends Component {\n    buildCols() {\n        let cells = [];\n        this.props.cells.forEach((cell, col) => {\n            cells.push(<Cell addBall={this.props.addBall} cell={cell} row={this.props.row} col={col} key={col} />)\n        });\n\n        return cells;\n    }\n    render() {\n        return (<div class={style.row}>\n            {this.buildCols()}\n        </div>)\n    }\n}\n\nclass Vortex extends Component {\n    state = {\n        interval: false,\n        balls: [],\n        grid: [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ]\n    }\n\n    buildRows() {\n        let rows = [];\n        this.state.grid.forEach((cells, row) => {\n            rows.push(<Row addBall={this.addBall} row={row} cells={cells} key={row} />)\n        });\n        return rows;\n    }\n\n    render() {\n        return (\n            <div class={style.grid}>\n                {this.buildRows()}\n            </div>\n        )\n    }\n\n    componentWillMount() {\n        let interval = setInterval(() => {\n            this.updateSimulation(this);\n        }, 25);\n        this.setState({ interval});\n\n    }\n\n    componentWillUnmount() {\n        if (this.state.interval) {\n            clearInterval(this.state.interval);\n        }\n    }\n\n    addBall = (row, col) => {\n        let xOffsetFromCentre = col - 5;\n        let yOffsetFromCentre = row - 5;\n        let radius = Math.sqrt((xOffsetFromCentre * xOffsetFromCentre) + (yOffsetFromCentre * yOffsetFromCentre));\n        let angleRadians = Math.atan2(yOffsetFromCentre, xOffsetFromCentre);\n        let angleDegrees = (360 + (angleRadians * 180 / Math.PI)) % 360;\n        \n        let updatedBalls = this.state.balls.concat([{ angle: angleDegrees, radius, energy: 1}]);\n        this.setState({ balls: updatedBalls});\n    }\n\n    updateSimulation() {\n        const updatedBalls = [];\n        for (let a = 0; a < this.state.balls.length; a++) {\n            let ball = this.state.balls[a];\n            let newRadius = ball.radius -= 0.05;\n            if (newRadius > 0) {\n                let newAngle = (ball.angle + 5) % 360;\n                let newEnergy = ball.energy - 0.01\n                updatedBalls.push({ angle: newAngle, radius: newRadius, energy: newEnergy});\n            }\n        }\n\n        // updatedBalls.push({ angle: (Math.random() * 90), radius: 5, energy: 1 });\n\n        const updatedGrid = [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ];\n\n        for (let ballNum = 0; ballNum < this.state.balls.length; ballNum++) {\n            let ball = this.state.balls[ballNum];\n\n            const radians = ball.angle * Math.PI / 180;\n            const col = 5 + (Math.cos(radians) * ball.radius);\n            const trailingCol = Math.trunc(col);\n            const trailingColEnergyPercent = (col % 1);\n            const leadingCol = trailingCol + 1;\n            const leadingColEnergyPercent = 1 - trailingColEnergyPercent;\n\n            const row = 5 + (Math.sin(radians) * ball.radius);\n            const trailingRow = Math.trunc(row);\n            const trailingRowEnergyPercent = (row % 1);\n            const leadingRow = trailingRow + 1;\n            const leadingRowEnergyPercent = 1 - trailingRowEnergyPercent;\n\n            if (trailingRow >=0 && trailingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[trailingRow][trailingCol] = ball.energy * trailingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[trailingRow][leadingCol] = ball.energy * trailingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n\n            }\n            if (leadingRow >=0 && leadingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[leadingRow][trailingCol] = ball.energy * leadingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[leadingRow][leadingCol] = ball.energy * leadingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n            }\n\n        }\n\n        this.setState({\n            balls: updatedBalls,\n            grid: updatedGrid\n        });\n\n    }\n}\n\nexport default Vortex;","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"grid__VaoAf\",\"row\":\"row__AQ9e1\",\"cell\":\"cell__VyMma\"};"],"sourceRoot":""}