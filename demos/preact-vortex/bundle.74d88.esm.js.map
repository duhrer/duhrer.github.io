{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/vortex/style.css","webpack:///./index.js","webpack:///./components/vortex/index.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/clone-element.js","webpack:///../src/create-context.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js","webpack:///./components/app.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","Cell","Component","this","props","addBall","row","col","render","energyAsSaturation","cell","class","style","onMouseEnter","event","handleMouseEnter","Row","buildCols","cells","forEach","push","Vortex","interval","balls","grid","xOffsetFromCentre","yOffsetFromCentre","radius","Math","sqrt","angleDegrees","atan2","PI","updatedBalls","state","concat","angle","energy","setState","buildRows","rows","componentWillMount","setInterval","updateSimulation","componentWillUnmount","clearInterval","a","length","ball","newRadius","updatedGrid","ballNum","radians","cos","trailingCol","trunc","trailingColEnergyPercent","leadingCol","leadingColEnergyPercent","sin","trailingRow","trailingRowEnergyPercent","leadingRow","leadingRowEnergyPercent","assign","obj","removeNode","node","parentNode","removeChild","createElement","type","children","ref","normalizedProps","arguments","slice","defaultProps","createVNode","original","vnode","__","__b","__e","__d","undefined","__h","constructor","vnodeId","options","createRef","current","Fragment","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","rerenderQueue","process","prevDebounce","debounceRendering","defer","queue","sort","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","Array","isArray","EMPTY_OBJ","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","doRender","sub","getDerivedStateFromProps","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","parentVNode","skipRemove","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","__c","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","isValidElement","error","errorInfo","ctor","handled","getDerivedStateFromError","componentDidCatch","update","callback","forceUpdate","Promise","then","resolve","setTimeout","h","Preact","interopDefault","default","normalizeURL","url","navigator","serviceWorker","register","__webpack_public_path__","require","getElementById","body","firstElementChild","init","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","CLI_DATA","currentURL","location","pathname","id"],"mappings":"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","file":"bundle.74d88.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"grid__WIPhk\",\"row\":\"row__kVa55\",\"cell\":\"cell__c5DcT\"};","import './style';\nimport App from './components/app';\n\nexport default App;\n","import {Component} from 'preact';\n\nimport style from './style.css';\n\nclass Cell extends Component {\n    render () {\n        const energyAsSaturation = this.props.cell * 255;\n        let backgroundStyle = `background-color: rgb(${energyAsSaturation}, ${energyAsSaturation}, ${energyAsSaturation})`;\n        return (\n            <div\n                class={style.cell}\n                style={backgroundStyle}\n                cell={this.props.cell}\n                onMouseEnter={(event) => { this.handleMouseEnter(event); }}\n            />\n        );\n    }\n\n    handleMouseEnter = () => {\n        this.props.addBall(this.props.row, this.props.col);\n    }\n}\n\n\nclass Row extends Component {\n    buildCols() {\n        let cells = [];\n        this.props.cells.forEach((cell, col) => {\n            cells.push(<Cell addBall={this.props.addBall} cell={cell} row={this.props.row} col={col} key={col} />)\n        });\n\n        return cells;\n    }\n    render() {\n        return (<div class={style.row}>\n            {this.buildCols()}\n        </div>)\n    }\n}\n\nclass Vortex extends Component {\n    state = {\n        interval: false,\n        balls: [],\n        grid: [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ]\n    }\n\n    buildRows() {\n        let rows = [];\n        this.state.grid.forEach((cells, row) => {\n            rows.push(<Row addBall={this.addBall} row={row} cells={cells} key={row} />)\n        });\n        return rows;\n    }\n\n    render() {\n        return (\n            <div class={style.grid}>\n                {this.buildRows()}\n            </div>\n        )\n    }\n\n    componentWillMount() {\n        let interval = setInterval(() => {\n            this.updateSimulation(this);\n        }, 25);\n        this.setState({ interval});\n\n    }\n\n    componentWillUnmount() {\n        if (this.state.interval) {\n            clearInterval(this.state.interval);\n        }\n    }\n\n    addBall = (row, col) => {\n        let xOffsetFromCentre = col - 5;\n        let yOffsetFromCentre = row - 5;\n        let radius = Math.sqrt((xOffsetFromCentre * xOffsetFromCentre) + (yOffsetFromCentre * yOffsetFromCentre));\n        let angleRadians = Math.atan2(yOffsetFromCentre, xOffsetFromCentre);\n        let angleDegrees = (360 + (angleRadians * 180 / Math.PI)) % 360;\n        \n        let updatedBalls = this.state.balls.concat([{ angle: angleDegrees, radius, energy: 1}]);\n        this.setState({ balls: updatedBalls});\n    }\n\n    updateSimulation() {\n        const updatedBalls = [];\n        for (let a = 0; a < this.state.balls.length; a++) {\n            let ball = this.state.balls[a];\n            let newRadius = ball.radius -= 0.05;\n            if (newRadius > 0) {\n                let newAngle = (ball.angle + 5) % 360;\n                let newEnergy = ball.energy - 0.01\n                updatedBalls.push({ angle: newAngle, radius: newRadius, energy: newEnergy});\n            }\n        }\n\n        // updatedBalls.push({ angle: (Math.random() * 90), radius: 5, energy: 1 });\n\n        const updatedGrid = [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ];\n\n        for (let ballNum = 0; ballNum < this.state.balls.length; ballNum++) {\n            let ball = this.state.balls[ballNum];\n\n            const radians = ball.angle * Math.PI / 180;\n            const col = 5 + (Math.cos(radians) * ball.radius);\n            const trailingCol = Math.trunc(col);\n            const trailingColEnergyPercent = (col % 1);\n            const leadingCol = trailingCol + 1;\n            const leadingColEnergyPercent = 1 - trailingColEnergyPercent;\n\n            const row = 5 + (Math.sin(radians) * ball.radius);\n            const trailingRow = Math.trunc(row);\n            const trailingRowEnergyPercent = (row % 1);\n            const leadingRow = trailingRow + 1;\n            const leadingRowEnergyPercent = 1 - trailingRowEnergyPercent;\n\n            if (trailingRow >=0 && trailingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[trailingRow][trailingCol] = ball.energy * trailingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[trailingRow][leadingCol] = ball.energy * trailingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n\n            }\n            if (leadingRow >=0 && leadingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[leadingRow][trailingCol] = ball.energy * leadingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[leadingRow][leadingCol] = ball.energy * leadingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n            }\n\n        }\n\n        this.setState({\n            balls: updatedBalls,\n            grid: updatedGrid\n        });\n\n    }\n}\n\nexport default Vortex;","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import Vortex from './vortex';\n\nconst App = () => (\n\t<div id=\"app\">\n\t\t<Vortex />\n\t</div>\n)\n\nexport default App;\n"],"sourceRoot":""}