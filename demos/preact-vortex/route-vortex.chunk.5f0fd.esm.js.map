{"version":3,"sources":["webpack:///./routes/vortex/index.js","webpack:///./routes/vortex/style.css"],"names":["Cell","Component","this","props","addBall","row","col","render","energyAsSaturation","cell","class","style","onMouseEnter","event","handleMouseEnter","Row","buildCols","cells","forEach","push","key","Vortex","interval","balls","grid","xOffsetFromCentre","yOffsetFromCentre","radius","Math","sqrt","angleDegrees","atan2","PI","updatedBalls","state","concat","angle","energy","setState","buildRows","rows","componentWillMount","setInterval","updateSimulation","componentWillUnmount","clearInterval","a","length","ball","newRadius","updatedGrid","ballNum","radians","cos","trailingCol","trunc","trailingColEnergyPercent","leadingCol","leadingColEnergyPercent","sin","trailingRow","trailingRowEnergyPercent","leadingRow","leadingRowEnergyPercent"],"mappings":"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","file":"route-vortex.chunk.5f0fd.esm.js","sourcesContent":["import {Component} from 'preact';\n\nimport style from './style.css';\n\nclass Cell extends Component {\n    render () {\n        const energyAsSaturation = this.props.cell * 255;\n        let backgroundStyle = `background-color: rgb(${energyAsSaturation}, ${energyAsSaturation}, ${energyAsSaturation})`;\n        return (\n            <div\n                class={style.cell}\n                style={backgroundStyle}\n                cell={this.props.cell}\n                onMouseEnter={(event) => { this.handleMouseEnter(event); }}\n            />\n        );\n    }\n\n    handleMouseEnter = () => {\n        this.props.addBall(this.props.row, this.props.col);\n    }\n}\n\n\nclass Row extends Component {\n    buildCols() {\n        let cells = [];\n        this.props.cells.forEach((cell, col) => {\n            cells.push(<Cell addBall={this.props.addBall} cell={cell} row={this.props.row} col={col} key={col} />)\n        });\n\n        return cells;\n    }\n    render() {\n        return (<div class={style.row}>\n            {this.buildCols()}\n        </div>)\n    }\n}\n\nclass Vortex extends Component {\n    state = {\n        interval: false,\n        balls: [],\n        grid: [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ]\n    }\n\n    buildRows() {\n        let rows = [];\n        this.state.grid.forEach((cells, row) => {\n            rows.push(<Row addBall={this.addBall} row={row} cells={cells} key={row} />)\n        });\n        return rows;\n    }\n\n    render() {\n        return (\n            <div class={style.grid}>\n                {this.buildRows()}\n            </div>\n        )\n    }\n\n    componentWillMount() {\n        let interval = setInterval(() => {\n            this.updateSimulation(this);\n        }, 25);\n        this.setState({ interval});\n\n    }\n\n    componentWillUnmount() {\n        if (this.state.interval) {\n            clearInterval(this.state.interval);\n        }\n    }\n\n    addBall = (row, col) => {\n        let xOffsetFromCentre = col - 5;\n        let yOffsetFromCentre = row - 5;\n        let radius = Math.sqrt((xOffsetFromCentre * xOffsetFromCentre) + (yOffsetFromCentre * yOffsetFromCentre));\n        let angleRadians = Math.atan2(yOffsetFromCentre, xOffsetFromCentre);\n        let angleDegrees = (360 + (angleRadians * 180 / Math.PI)) % 360;\n        \n        let updatedBalls = this.state.balls.concat([{ angle: angleDegrees, radius, energy: 1}]);\n        this.setState({ balls: updatedBalls});\n    }\n\n    updateSimulation() {\n        const updatedBalls = [];\n        for (let a = 0; a < this.state.balls.length; a++) {\n            let ball = this.state.balls[a];\n            let newRadius = ball.radius -= 0.05;\n            if (newRadius > 0) {\n                let newAngle = (ball.angle + 5) % 360;\n                let newEnergy = ball.energy - 0.01\n                updatedBalls.push({ angle: newAngle, radius: newRadius, energy: newEnergy});\n            }\n        }\n\n        // updatedBalls.push({ angle: (Math.random() * 90), radius: 5, energy: 1 });\n\n        const updatedGrid = [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ];\n\n        for (let ballNum = 0; ballNum < this.state.balls.length; ballNum++) {\n            let ball = this.state.balls[ballNum];\n\n            const radians = ball.angle * Math.PI / 180;\n            const col = 5 + (Math.cos(radians) * ball.radius);\n            const trailingCol = Math.trunc(col);\n            const trailingColEnergyPercent = (col % 1);\n            const leadingCol = trailingCol + 1;\n            const leadingColEnergyPercent = 1 - trailingColEnergyPercent;\n\n            const row = 5 + (Math.sin(radians) * ball.radius);\n            const trailingRow = Math.trunc(row);\n            const trailingRowEnergyPercent = (row % 1);\n            const leadingRow = trailingRow + 1;\n            const leadingRowEnergyPercent = 1 - trailingRowEnergyPercent;\n\n            if (trailingRow >=0 && trailingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[trailingRow][trailingCol] = ball.energy * trailingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[trailingRow][leadingCol] = ball.energy * trailingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n\n            }\n            if (leadingRow >=0 && leadingRow < 10) {\n                if (trailingCol >= 0 && trailingCol < 10) {\n                    updatedGrid[leadingRow][trailingCol] = ball.energy * leadingRowEnergyPercent * trailingColEnergyPercent;\n                }\n\n                if (leadingCol >= 0 && leadingCol < 10) {\n                    updatedGrid[leadingRow][leadingCol] = ball.energy * leadingRowEnergyPercent * leadingColEnergyPercent;    \n                }    \n            }\n\n        }\n\n        this.setState({\n            balls: updatedBalls,\n            grid: updatedGrid\n        });\n\n    }\n}\n\nexport default Vortex;","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"grid__VaoAf\",\"row\":\"row__AQ9e1\",\"cell\":\"cell__VyMma\"};"],"sourceRoot":""}