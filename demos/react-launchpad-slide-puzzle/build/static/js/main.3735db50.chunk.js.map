{"version":3,"sources":["Colours.js","Cell.js","Row.js","Grid.js","MultiSelect.js","MidiPanel.js","Puzzle.js","index.js"],"names":["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","Cell","className","this","props","value","ref","cellRef","row","col","onClick","handleClick","onKeyDown","event","handleKeyDown","style","Colours","React","Component","Row","parseInt","offset","numCells","renderStack","i","push","renderSquare","cellRefs","cells","key","renderSquares","watchedKeys","Grid","numRows","Array","rowIndex","colIndex","createRef","gridComponent","cellProps","indexOf","targetRow","targetCol","current","focus","grid","renderRows","MultiSelectOption","label","MultiSelect","state","selectedValues","handleChange","bind","selectedValueMap","target","options","length","singleOption","selected","Object","keys","setState","stateChangeCallbacks","forEach","callback","optionsMarkup","optionsKeys","a","optionDef","title","multiple","onChange","defaultValue","fluid","original","JSON","parse","stringify","MidiPanel","sendMidiMessage","inputListeners","outputChangeListeners","outputAccumulator","outputPorts","inputDefs","selectedInputs","outputDefs","selectedOutputs","handleStateChange","updateSelectedInputs","updateSelectedOutputs","navigator","requestMIDIAccess","sysex","then","access","inputs","values","input","id","name","onmidimessage","data","handleMidiInput","next","done","outputs","output","addEventListener","changedPort","port","defsToUpdate","type","updatedDefs","copy","updatedStateFragment","inputId","midiMessageEvent","inputDef","inputSelected","dataAsJson","flock","midi","read","inputListener","outputIds","write","outputId","send","class","fn","status","channel","noteOff","noteOn","polyAftertouch","controlChange","programChange","channelAftertouch","pitchbend","system","fail","note","velocity","pressure","number","program","twoByteValue","messageFailure","songPointer","songSelect","tuneRequest","clock","start","stop","activeSense","reset","begin","end","Uint8Array","subarray","slice","valueMessage","val","systemRealtimeMessages","createSystemRealtimeMessageReaders","midiMessage","aftertouch","largeValueMessage","singleByteMessage","threeByteMessage","twoByteMessage","msNibble","lsNibble","statusByte","data1","data2","array","len","framedData","set","error","Error","Puzzle","outputCallbacks","registerOutput","updateLaunchpad","messages","rowCells","o","outputCallback","m","Math","floor","pushFromSquare","thisRow","emptyCellColumnIndex","rowShiftedState","shiftedRow","shiftArray","thisColumn","extractCol","emptyCellRowIndex","columnShiftedState","shiftedColumn","originalArray","emptySpaceIndex","clickedEntryIndex","shiftedArray","splice","columnCells","Instructions","ReactDOM","render","document","getElementById"],"mappings":"8PACmB,GACXA,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WC7HQC,E,uKACP,IAAD,OACL,OACI,4BACIC,UAAgC,IAArBC,KAAKC,MAAMC,MAAc,aAAe,OACnDC,IAAKH,KAAKC,MAAMG,QAASC,IAAKL,KAAKC,MAAMI,IACzCC,IAAKN,KAAKC,MAAMK,IAAKC,QAAS,WAAM,EAAKN,MAAMO,YAAY,EAAKP,QAChEQ,UAAW,SAACC,GAAY,EAAKT,MAAMU,cAAcD,EAAO,EAAKT,QAC7DW,MAAO,CAAC,mBAAoBC,EAAQb,KAAKC,MAAMC,SAEzB,IAArBF,KAAKC,MAAMC,MAAc,GAAKF,KAAKC,MAAMC,W,GAVxBY,IAAMC,WCDnBC,E,kDACjB,WAAaf,GAAQ,IAAD,8BAChB,cAAMA,IACDI,IAAWJ,EAAMI,IAAMY,SAAShB,EAAMI,IAAK,IAAM,EACtD,EAAKa,OAAsB,EAAX,EAAKb,IACrB,EAAKc,SAAWlB,EAAMkB,UAAY,EAJlB,E,4DAShB,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIrB,KAAKmB,SAAUE,IAC/BD,EAAYE,KAAKtB,KAAKuB,aAAaF,IAEvC,OAAOD,I,mCAGEC,GACT,OAAO,kBAAC,EAAD,CACHjB,QAASJ,KAAKC,MAAMuB,UAAYxB,KAAKC,MAAMuB,SAASH,GACpDnB,MAAOF,KAAKC,MAAMwB,OAASzB,KAAKC,MAAMwB,MAAMJ,GAC5CV,cAAeX,KAAKC,MAAMU,cAC1BH,YAAaR,KAAKC,MAAMO,YACxBkB,IAAK,SAAW1B,KAAKkB,OAASG,GAAIf,IAAKe,EAAGhB,IAAKL,KAAKK,Q,+BAKxD,OACI,yBAAKN,UAAU,OACVC,KAAK2B,qB,GA7BWb,IAAMC,WCAjCa,EAAc,CAChB,UACA,YACA,YACA,cAGiBC,E,kDACjB,WAAY5B,GAAQ,IAAD,uBACf,cAAMA,IAED6B,QAAW7B,EAAM6B,SAAY,EAClC,EAAKX,SAAWlB,EAAMkB,UAAY,EAElC,EAAKK,SAAWO,MAAM,EAAKD,SAE3B,IAAK,IAAIE,EAAW,EAAGA,EAAW,EAAKF,QAASE,IAAY,CACxD,EAAKR,SAASQ,GAAYD,MAAM,EAAKZ,UACrC,IAAK,IAAIc,EAAW,EAAGA,EAAW,EAAKH,QAASG,IAC5C,EAAKT,SAASQ,GAAUC,GAAYnB,IAAMoB,YAXnC,S,0DAgBLC,EAAezB,EAAO0B,GAChC,IAAwC,IAApCR,EAAYS,QAAQ3B,EAAMgB,KAAa,CACvC,IAAIY,EAAYF,EAAU/B,IACtBkC,EAAYH,EAAU9B,IAGR,cAAdI,EAAMgB,IACNY,GAAaA,EAAY,GAAKtC,KAAK8B,QAIhB,YAAdpB,EAAMgB,IACXY,GAAaA,GAActC,KAAK8B,QAAU,IAAM9B,KAAK8B,QAIlC,cAAdpB,EAAMgB,IACXa,GAAYA,GAAcvC,KAAK8B,QAAU,IAAM9B,KAAKmB,SAIjC,eAAdT,EAAMgB,MACXa,GAAYA,EAAY,GAAKvC,KAAKmB,UAGxBgB,EAAcX,SAASc,GAAWC,GACxCC,QAAQC,W,mCAOpB,IAHU,IAAD,OACLrB,EAAc,GAETC,EAAI,EAAGA,EAAIrB,KAAK8B,QAAST,IAC9BD,EAAYE,KAAK,kBAAC,EAAD,CACbE,SAAUxB,KAAKwB,SAASH,GACxBF,SAAUnB,KAAKmB,SACfM,MAAOzB,KAAKC,MAAMyC,MAAQ1C,KAAKC,MAAMyC,KAAKrB,GAC1CV,cAAgB,SAACD,EAAO0B,GAAe,EAAKzB,cAAc,EAAKD,EAAO0B,IACtE5B,YAAaR,KAAKC,MAAMO,YAAakB,IAAK,OAASL,EAAGhB,IAAKgB,KAGnE,OAAOD,I,+BAKP,OACI,6BACKpB,KAAK2C,kB,GAlEY7B,IAAMC,WCRlC6B,E,uKAEE,OACI,4BAAQ1C,MAAOF,KAAKC,MAAMC,OAAQF,KAAKC,MAAM4C,W,GAHzB/B,IAAMC,WAQjB+B,E,kDACjB,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IACD8C,MAAM,CACPC,eAAgB/C,EAAM+C,gBAAkB,IAG5C,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,yDAWNxC,GAET,IADA,IAAIyC,EAAmB,GACd9B,EAAI,EAAGA,EAAIX,EAAM0C,OAAOC,QAAQC,OAAQjC,IAAK,CAClD,IAAIkC,EAAe7C,EAAM0C,OAAOC,QAAQhC,GACpCkC,EAAaC,WACbL,EAAiBI,EAAarD,QAAS,GAI/C,IAAI8C,EAAiBS,OAAOC,KAAKP,GACjCnD,KAAK2D,SAAS,CACVX,eAAgBA,IAGhBhD,KAAKC,MAAM2D,sBACX5D,KAAKC,MAAM2D,qBAAqBC,SAAQ,SAACC,GACrCA,EAASd,Q,+BAQjB,IAFA,IAAMe,EAAgB,GAChBC,EAAcP,OAAOC,KAAK1D,KAAKC,MAAMoD,SAClCY,EAAI,EAAGA,EAAID,EAAYV,OAAQW,IAAK,CACzC,IAAIvC,EAAMsC,EAAYC,GAClBC,EAAYlE,KAAKC,MAAMoD,QAAQ3B,GACnCqC,EAAczC,KAAK,kBAAC,EAAD,CAAmBpB,MAAOgE,EAAUhE,MAAOwB,IAAK,UAAYA,EAAKmB,MAAQqB,EAAUrB,OAASqB,EAAUhE,SAE7H,OACI,6BACI,4BAAKF,KAAKC,MAAMkE,OAChB,4BAAQC,UAAU,EAAMC,SAAUrE,KAAKiD,aAAcqB,aAActE,KAAKC,MAAMqE,cACzEP,Q,GA7CoBjD,IAAMC,WCN3CwD,EAAQ,CAGZA,KAAa,SAAUC,GACnB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,MAGhBI,E,kDACjB,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAID4E,gBAAkB,EAAKA,gBAAgB3B,KAArB,gBACvB,EAAK4B,eAAiB7E,EAAM6E,gBAAkB,CAAC,EAAKD,iBACpD,EAAKE,sBAAwB9E,EAAM8E,uBAAyB,GAGxD9E,EAAM+E,mBACN/E,EAAM+E,kBAAkB,EAAKH,iBAGjC,EAAKI,YAAc,GACnB,EAAKlC,MAAM,CACPmC,UAAW,GACXC,eAAgB,GAChBC,WAAY,GACZC,gBAAiB,IAGrB,EAAKC,kBAAoB,EAAKA,kBAAkBpC,KAAvB,gBACzB,EAAKqC,qBAAuB,EAAKA,qBAAqBrC,KAA1B,gBAC5B,EAAKsC,sBAAwB,EAAKA,sBAAsBtC,KAA3B,gBAGLuC,UAAUC,kBAAkB,CAAEC,OAAO,IAC3CC,MAAM,SAACC,GAGrB,IAFA,IAAMC,EAASD,EAAOC,OAAOC,SACzBb,EAAY,GAFgB,WAGvBc,GACLd,EAAUc,EAAM9F,MAAM+F,IAAM,CACxBpD,MAAOmD,EAAM9F,MAAMgG,KACnBhG,MAAO8F,EAAM9F,MAAM+F,IAIvBD,EAAM9F,MAAMiG,cAAgB,SAACC,GAAW,EAAKC,gBAAgBL,EAAM9F,MAAM+F,GAAIG,KAPxEJ,EAAQF,EAAOQ,OAAQN,IAAUA,EAAMO,KAAMP,EAAQF,EAAOQ,OAAS,EAArEN,GAST,EAAKrC,SAAS,CAAEuB,UAAWA,IAI3B,IAFA,IAAIE,EAAa,GACXoB,EAAUX,EAAOW,QAAQT,SACtBU,EAASD,EAAQF,OAAQG,IAAWA,EAAOF,KAAME,EAASD,EAAQF,OACvElB,EAAWqB,EAAOvG,MAAM+F,IAAM,CAC1BpD,MAAO4D,EAAOvG,MAAMgG,KACpBhG,MAAOuG,EAAOvG,MAAM+F,IAIxB,EAAKhB,YAAYwB,EAAOvG,MAAM+F,IAAMQ,EAAOvG,MAG/C,EAAKyD,SAAS,CAAEyB,WAAYA,IAE5BS,EAAOa,iBAAiB,cAAe,EAAKpB,sBAxDjC,E,iEA4DEH,GACjBnF,KAAK2D,SAAS,CAACwB,eAAgBA,M,4CAGbE,GAClBrF,KAAK2D,SAAS,CAAC0B,gBAAiBA,IAChCrF,KAAK+E,sBAAsBlB,SAAQ,SAACC,GAChCA,S,wCAIUpD,GACd,IAAIiG,EAAcjG,EAAMkG,KAEpBC,EAAoC,UAArBF,EAAYG,KAAmB,YAAc,aAC5DC,EAAaxC,EAAMyC,KAAKhH,KAAK+C,MAAM8D,IAEb,cAAtBF,EAAY5D,MACZgE,EAAYJ,EAAYV,IAAM,CAC1BpD,MAAO8D,EAAYT,KACnBhG,MAAOyG,EAAYV,WAIhBc,EAAYJ,EAAYV,IAGnC,IAAIgB,EAAuB,GAC3BA,EAAqBJ,GAAgBE,EACrC/G,KAAK2D,SAASsD,K,sCAGDC,EAASC,GAEtB,IAAIC,EAAWpH,KAAK+C,MAAMmC,UAAUgC,GAChCG,GAAgE,IAAhDrH,KAAK+C,MAAMoC,eAAe9C,QAAQ6E,GACtD,GAAIE,GAAYC,GAAiBrH,KAAK8E,eAAexB,OAAQ,CACzD,IAAIgE,EAAaC,EAAMC,KAAKC,KAAKN,EAAiBf,MAClDpG,KAAK8E,eAAejB,SAAQ,SAAC6D,GACzBA,EAAcJ,S,sCAKTA,GAAa,IAAD,OACrBK,EAAYlE,OAAOC,KAAK1D,KAAK+C,MAAMqC,YACnCgB,EAAOmB,EAAMC,KAAKI,MAAMN,GAC5BK,EAAU9D,SAAQ,SAACgE,IACwD,IAAlD,EAAK9E,MAAMsC,gBAAgBhD,QAAQwF,IAGnC,EAAK5C,YAAY4C,GACvBC,KAAK1B,Q,+BAMxB,OACI,yBAAK2B,MAAM,cACP,kBAAC,EAAD,CAAa5D,MAAM,SAAUd,QAASrD,KAAK+C,MAAMmC,UAAYlC,eAAgBhD,KAAK+C,MAAMoC,eAAgBvB,qBAAsB,CAAC5D,KAAKuF,wBACpI,kBAAC,EAAD,CAAapB,MAAM,UAAUd,QAASrD,KAAK+C,MAAMqC,WAAYpC,eAAgBhD,KAAK+C,MAAMsC,gBAAiBzB,qBAAsB,CAAC5D,KAAKwF,8B,GA1H9G1E,IAAMC,WAoIzCwG,EAAQ,CACZA,KAAa,IAEbA,EAAMC,KAAKC,KAAO,SAAUrB,GACxB,IAGI4B,EAHAC,EAAS7B,EAAK,GAEd8B,EAAmB,GAATD,EAGd,OAJWA,GAAU,GAKjB,KAAK,EACDD,EAAKT,EAAMC,KAAKC,KAAKU,QACrB,MACJ,KAAK,EACDH,EAAK5B,EAAK,GAAK,EAAImB,EAAMC,KAAKC,KAAKW,OAASb,EAAMC,KAAKC,KAAKU,QAC5D,MACJ,KAAK,GACDH,EAAKT,EAAMC,KAAKC,KAAKY,eACrB,MACJ,KAAK,GACDL,EAAKT,EAAMC,KAAKC,KAAKa,cACrB,MACJ,KAAK,GACDN,EAAKT,EAAMC,KAAKC,KAAKc,cACrB,MACJ,KAAK,GACDP,EAAKT,EAAMC,KAAKC,KAAKe,kBACrB,MACJ,KAAK,GACDR,EAAKT,EAAMC,KAAKC,KAAKgB,UACrB,MACJ,KAAK,GACDT,EAAKT,EAAMC,KAAKC,KAAKiB,OACrB,MACJ,QACI,OAAOnB,EAAMoB,KAAK,0CACdlE,KAAKE,UAAUyB,IAG3B,OAAO4B,EAAGE,EAAS9B,IAIvBmB,EAAMC,KAAKC,KAAKmB,KAAO,SAAU9B,EAAMoB,EAAS9B,GAC5C,MAAO,CACHU,KAAMA,EACNoB,QAASA,EACTU,KAAMxC,EAAK,GACXyC,SAAUzC,EAAK,KAKvBmB,EAAMC,KAAKC,KAAKW,OAAS,SAAUF,EAAS9B,GACxC,OAAOmB,EAAMC,KAAKC,KAAKmB,KAAK,SAAUV,EAAS9B,IAInDmB,EAAMC,KAAKC,KAAKU,QAAU,SAAUD,EAAS9B,GACzC,OAAOmB,EAAMC,KAAKC,KAAKmB,KAAK,UAAWV,EAAS9B,IAIpDmB,EAAMC,KAAKC,KAAKY,eAAiB,SAAUH,EAAS9B,GAChD,MAAO,CACHU,KAAM,aACNoB,QAASA,EACTU,KAAMxC,EAAK,GACX0C,SAAU1C,EAAK,KAKvBmB,EAAMC,KAAKC,KAAKa,cAAgB,SAAUJ,EAAS9B,GAC/C,MAAO,CACHU,KAAM,UACNoB,QAASA,EACTa,OAAQ3C,EAAK,GACblG,MAAOkG,EAAK,KAKpBmB,EAAMC,KAAKC,KAAKc,cAAgB,SAAUL,EAAS9B,GAC/C,MAAO,CACHU,KAAM,UACNoB,QAASA,EACTc,QAAS5C,EAAK,KAKtBmB,EAAMC,KAAKC,KAAKe,kBAAoB,SAAUN,EAAS9B,GACnD,MAAO,CACHU,KAAM,aACNoB,QAASA,EACTY,SAAU1C,EAAK,KAKvBmB,EAAMC,KAAKC,KAAKwB,aAAe,SAAU7C,GACrC,OAAQA,EAAK,IAAM,EAAKA,EAAK,IAIjCmB,EAAMC,KAAKC,KAAKgB,UAAY,SAAUP,EAAS9B,GAC3C,MAAO,CACHU,KAAM,YACNoB,QAASA,EACThI,MAAOqH,EAAMC,KAAKC,KAAKwB,aAAa7C,KAK5CmB,EAAMC,KAAKC,KAAKiB,OAAS,SAAUT,EAAQ7B,GACvC,GAAe,IAAX6B,EACA,OAAOV,EAAMC,KAAK0B,eAAe,qBAGrC,IAAIlB,EACJ,OAAQC,GACJ,KAAK,EACDD,EAAKT,EAAMC,KAAKC,KAAK9B,MACrB,MACJ,KAAK,EACDqC,EAAKT,EAAMC,KAAKC,KAAK0B,YACrB,MACJ,KAAK,EACDnB,EAAKT,EAAMC,KAAKC,KAAK2B,WACrB,MACJ,KAAK,EACDpB,EAAKT,EAAMC,KAAKC,KAAK4B,YACrB,MACJ,KAAK,EACDrB,EAAKT,EAAMC,KAAKC,KAAK6B,MACrB,MACJ,KAAK,GACDtB,EAAKT,EAAMC,KAAKC,KAAK8B,MACrB,MACJ,KAAK,GACDvB,EAAKT,EAAMC,KAAKC,KAAX,SACL,MACJ,KAAK,GACDO,EAAKT,EAAMC,KAAKC,KAAK+B,KACrB,MACJ,KAAK,GACDxB,EAAKT,EAAMC,KAAKC,KAAKgC,YACrB,MACJ,KAAK,GACDzB,EAAKT,EAAMC,KAAKC,KAAKiC,MACrB,MACJ,QACI,OAAOnC,EAAMoB,KAAK,iDACdlE,KAAKE,UAAUyB,IAG3B,OAAO4B,EAAG5B,IAIdmB,EAAMC,KAAK0B,eAAiB,SAAUpC,GAClCS,EAAMoB,KAAK,4CAA8C7B,EAAO,eAKpES,EAAMC,KAAKC,KAAK9B,MAAQ,SAAUS,GAC9B,IAAIuD,EAAoB,MAAZvD,EAAK,GAAc,EAAI,EAC/BwD,EAAMxD,EAAK9C,QAAoC,MAA1B8C,EAAKA,EAAK9C,OAAS,GAAc,EAAI,GAO9D,MAAO,CACHwD,KAAM,QACNV,KANcA,aAAgByD,WAC9BzD,EAAK0D,SAASH,EAAOC,GACrBxD,EAAK2D,MAAMJ,EAAOC,KAS1BrC,EAAMC,KAAKC,KAAKuC,aAAe,SAAUlD,EAAM5G,GAC3C,MAAO,CACH4G,KAAMA,EACN5G,MAAOA,IAKfqH,EAAMC,KAAKC,KAAK0B,YAAc,SAAU/C,GACpC,IAAI6D,EAAM1C,EAAMC,KAAKC,KAAKwB,aAAa7C,GACvC,OAAOmB,EAAMC,KAAKC,KAAKuC,aAAa,cAAeC,IAIvD1C,EAAMC,KAAKC,KAAK2B,WAAa,SAAUhD,GACnC,OAAOmB,EAAMC,KAAKC,KAAKuC,aAAa,aAAc5D,EAAK,KAI3DmB,EAAMC,KAAKC,KAAK4B,YAAc,WAC1B,MAAO,CACHvC,KAAM,gBAIdS,EAAMC,KAAK0C,uBAAyB,CAChC,cACA,QACA,QACA,WACA,OACA,cACA,SAIJ3C,EAAMC,KAAK2C,mCAAqC,SAAUD,GAEtDA,EAAuBrG,SAAQ,SAACiD,GAC5BS,EAAMC,KAAKC,KAAKX,GAAQ,WACpB,MAAO,CACHA,KAAMA,QAOtBS,EAAMC,KAAK2C,mCAAmC5C,EAAMC,KAAK0C,wBAWzD3C,EAAMC,KAAKI,MAAQ,SAAUwC,GACzB,GAAyB,UAArBA,EAAYtD,KACZ,OAAOS,EAAMC,KAAKI,MAAMjC,MAAMyE,GAMlC,OAAQA,EAAYtD,MAChB,IAAK,SACD,OAAOS,EAAMC,KAAKI,MAAMgB,KAAK,EAAGwB,GACpC,IAAK,UACD,OAAO7C,EAAMC,KAAKI,MAAMgB,KAAK,EAAGwB,GACpC,IAAK,aACD,OAAO7C,EAAMC,KAAKI,MAAMyC,WAAWD,GACvC,IAAK,UACD,OAAO7C,EAAMC,KAAKI,MAAMU,cAAc8B,GAC1C,IAAK,UACD,OAAO7C,EAAMC,KAAKI,MAAMW,cAAc6B,GAC1C,IAAK,YACD,OAAO7C,EAAMC,KAAKI,MAAM0C,kBAAkB,GAAIF,EAAYlC,QAASkC,GACvE,IAAK,cACD,OAAO7C,EAAMC,KAAKI,MAAM0C,kBAAkB,GAAI,EAAGF,GACrD,IAAK,aACD,OAAO7C,EAAMC,KAAKI,MAAM0C,kBAAkB,GAAI,EAAGF,GACrD,IAAK,cACD,OAAO7C,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,GAClD,IAAK,QACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,GAClD,IAAK,QACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,IAClD,IAAK,WACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,IAClD,IAAK,OACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,IAClD,IAAK,cACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,IAClD,IAAK,QACD,OAAOhD,EAAMC,KAAKI,MAAM2C,kBAAkB,GAAI,IAClD,QACIhD,EAAMoB,KAAK,sDAAwDyB,EAAYtD,KAAO,QAKlGS,EAAMC,KAAKI,MAAMgB,KAAO,SAAUX,EAAQmC,GACtC,OAAO7C,EAAMC,KAAKI,MAAM4C,iBAAiBvC,EAAQmC,EAAYlC,QACzDkC,EAAYxB,KAAMwB,EAAYvB,WAItCtB,EAAMC,KAAKI,MAAMU,cAAgB,SAAU8B,GACvC,OAAO7C,EAAMC,KAAKI,MAAM4C,iBAAiB,GAAIJ,EAAYlC,QACrDkC,EAAYrB,OAAQqB,EAAYlK,QAIxCqH,EAAMC,KAAKI,MAAMW,cAAgB,SAAU6B,GACvC,OAAO7C,EAAMC,KAAKI,MAAM6C,eAAe,GAAIL,EAAYlC,QAASkC,EAAYpB,UAIhFzB,EAAMC,KAAKI,MAAMyC,WAAa,SAAUD,GAEpC,OAAIA,EAAYxB,KACLrB,EAAMC,KAAKI,MAAMgB,KAAK,GAAIwB,GAI9B7C,EAAMC,KAAKI,MAAM6C,eAAe,GAAIL,EAAYlC,QAASkC,EAAYtB,WAIhFvB,EAAMC,KAAKI,MAAM2C,kBAAoB,SAAUG,EAAUC,GACrD,IAAIvE,EAAO,IAAIyD,WAAW,GAE1B,OADAzD,EAAK,GAAKmB,EAAMC,KAAKI,MAAMgD,WAAWF,EAAUC,GACzCvE,GAIXmB,EAAMC,KAAKI,MAAM6C,eAAiB,SAAUC,EAAUC,EAAUE,GAC5D,IAAIzE,EAAO,IAAIyD,WAAW,GAG1B,OAFAzD,EAAK,GAAKmB,EAAMC,KAAKI,MAAMgD,WAAWF,EAAUC,GAChDvE,EAAK,GAAKyE,EACHzE,GAIXmB,EAAMC,KAAKI,MAAM4C,iBAAmB,SAAUE,EAAUC,EAAUE,EAAOC,GACrE,IAAI1E,EAAO,IAAIyD,WAAW,GAI1B,OAHAzD,EAAK,GAAKmB,EAAMC,KAAKI,MAAMgD,WAAWF,EAAUC,GAChDvE,EAAK,GAAKyE,EACVzE,EAAK,GAAK0E,EACH1E,GAIXmB,EAAMC,KAAKI,MAAM0C,kBAAoB,SAAUI,EAAUC,EAAUP,GAC/D,IAAIhE,EAAO,IAAIyD,WAAW,GAG1B,OAFAzD,EAAK,GAAKmB,EAAMC,KAAKI,MAAMgD,WAAWF,EAAUC,GAChDpD,EAAMC,KAAKI,MAAMqB,aAAamB,EAAYlK,MAAOkG,EAAM,GAChDA,GAYXmB,EAAMC,KAAKI,MAAMgD,WAAa,SAAUF,EAAUC,GAC9C,OAAQD,GAAY,GAAKC,GAa7BpD,EAAMC,KAAKI,MAAMqB,aAAgB,SAAU/I,EAAO6K,EAAO7J,GAErD6J,EADA7J,EAASA,GAAU,GACK,IAARhB,EAChB6K,EAAM7J,EAAS,GAAMhB,GAAS,EAAK,KAcvCqH,EAAMC,KAAKI,MAAMjC,MAAQ,SAAUyE,GACH,MAAxBA,EAAYhE,KAAK,IAAiE,MAAlDgE,EAAYhE,KAAKgE,EAAYhE,KAAK9C,OAAS,IAC3EiE,EAAMoB,KAAK,oDAGf,IAAIvC,EAAOgE,EAAYhE,KACnB4E,EAAM5E,EAAK9C,OAEX2H,EAAa,IAAIpB,WAAWmB,EAAM,GAKtC,OAJAC,EAAW,GAAK,IAChBA,EAAWD,EAAM,GAAK,IACtBC,EAAWC,IAAI9E,EAAM,GAEd6E,GAIX1D,EAAMoB,KAAO,SAASwC,GAClB,MAAM,IAAIC,MAAMD,I,IC/hBCE,E,kDACnB,WAAYpL,GAAQ,IAAD,8BACf,cAAMA,IACDqL,gBAAkB,GACvB,EAAKvI,MAAQ,CACTL,KAAM,CACF,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACtB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAI/B,EAAK6I,eAAkB,EAAKA,eAAerI,KAApB,gBACvB,EAAKmD,gBAAkB,EAAKA,gBAAgBnD,KAArB,gBACvB,EAAKsI,gBAAkB,EAAKA,gBAAgBtI,KAArB,gBAlBR,E,iEAwBflD,KAAKwL,oB,wCAKL,GAAIxL,KAAKsL,gBAAgBhI,OAAQ,CAE7B,IADA,IAAImI,EAAW,GACNpL,EAAM,EAAGA,EAAML,KAAK+C,MAAML,KAAKY,OAAQjD,IAE5C,IADA,IAAIqL,EAAW1L,KAAK+C,MAAML,KAAKrC,GACtBC,EAAM,EAAGA,EAAMoL,EAASpI,OAAQhD,IAAO,CAC5C,IAAIuI,EAAW7I,KAAK+C,MAAML,KAAKrC,GAAKC,GAEhCsI,EAAkB,IAAT,EAAEvI,GAAaC,EAAM,EAClCmL,EAASnK,KAAK,CACVwF,KAAU,SACVoB,QAAU,EACVW,SAAUA,EACVD,KAAUA,IAKtB,IAAK,IAAI+C,EAAI,EAAGA,EAAI3L,KAAKsL,gBAAgBhI,OAAQqI,IAE7C,IADA,IAAIC,EAAiB5L,KAAKsL,gBAAgBK,GACjCE,EAAI,EAAGA,EAAIJ,EAASnI,OAAQuI,IAAK,CAEtCD,EADcH,EAASI,Q,qCAOvBD,GACZ5L,KAAKsL,gBAAgBhK,KAAKsK,K,sCAGbxB,GACb,GAAyB,WAArBA,EAAYtD,KAAmB,CAC/B,IAAIxG,EAAO8J,EAAYxB,KAAO,GAAM,EAChCvI,EAAM,EAAIyL,KAAKC,MAAM3B,EAAYxB,KAAO,IAC5C5I,KAAKgM,eAAe3L,EAAKC,M,qCAIlBD,EAAKC,GAGlB,GAAkB,IAFFN,KAAK+C,MAAML,KAAKrC,GAAKC,QAKhC,CACD,IAAI2L,EAAUjM,KAAK+C,MAAML,KAAKrC,GAC1B6L,EAAuBD,EAAQ5J,QAAQ,GAG3C,IAA8B,IAA1B6J,EAA6B,CAC7B,IAAIC,EAAkBnM,KAAK+C,MAAML,KAAKqH,QAGlCqC,EAAapM,KAAKqM,WAAWJ,EAASC,EAAsB5L,GAChE6L,EAAgB9L,GAAO+L,EAEvBpM,KAAK2D,SAAS,CAACjB,KAAMyJ,QAEpB,CAED,IAAIG,EAAatM,KAAKuM,WAAWjM,GAC7BkM,EAAoBF,EAAWjK,QAAQ,GAG3C,IAA2B,IAAvBmK,EAA0B,CAM1B,IALA,IAAIC,EAAqBzM,KAAK+C,MAAML,KAAKqH,QAGrC2C,EAAgB1M,KAAKqM,WAAWC,EAAYE,EAAmBnM,GAE1D2B,EAAW,EAAGA,EAAWhC,KAAK+C,MAAML,KAAKY,OAAQtB,IACtDyK,EAAmBzK,GAAU1B,GAAOoM,EAAc1K,GAItDhC,KAAK2D,SAAS,CAAEjB,KAAM+J,S,kCASxBrK,GACVpC,KAAKgM,eAAe5J,EAAU/B,IAAK+B,EAAU9B,O,iCAQpCqM,EAAeC,EAAiBC,GACvC,IAAIC,EAAeH,EAAc5C,QAOjC,OAJA+C,EAAaC,OAAOH,EAAiB,GAGrCE,EAAaC,OAAOF,EAAmB,EAAG,GACnCC,I,iCAGA7K,GAEP,IADA,IAAI+K,EAAc,GACThL,EAAW,EAAGA,EAAWhC,KAAK+C,MAAML,KAAKY,OAAQtB,IACtDgL,EAAY1L,KAAKtB,KAAK+C,MAAML,KAAKV,GAAUC,IAE/C,OAAO+K,I,+BAGD,IAAD,OACL,OACA,yBAAKjN,UAAU,UACb,kBAACkN,EAAD,MACA,yBAAKlN,UAAU,QACb,kBAAC,EAAD,CAAM2C,KAAM1C,KAAK+C,MAAML,KACnBlC,YAAa,SAACa,GAAD,OAAO,EAAKb,YAAYa,OAG3C,kBAAC,EAAD,CACI2D,kBAAmBhF,KAAKuL,eACxBzG,eAAgB,CAAC9E,KAAKqG,iBACtBtB,sBAAuB,CAAC/E,KAAKwL,wB,GA3JL1K,IAAMC,WAkK1C,SAASkM,EAAchN,GACnB,OACE,yBAAKF,UAAU,gBACb,4GACA,2JCpKRmN,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3735db50.chunk.js","sourcesContent":["    // Sampled from illustrations in the Launchpad Pro Programmer's Guide and device photos.\n    export default {\n        0: \"#000000\",\n        1: \"#CCCCCC\",\n        2: \"#EEEEEE\",\n        3: \"#FFFFFF\",\n        4: \"#FDB1CF\",\n        5: \"#FF0000\",\n        6: \"#cc0000\",\n        7: \"#aa0000\",\n        8: \"#FDFBF2\",\n        9: \"#fdaa84\",\n        10: \"#fdaa84\",\n        11: \"#cc9900\",\n        12: \"#ffdd66\",\n        13: \"#fdfc8f\",\n        14: \"#cccc00\",\n        15: \"#999900\",\n        16: \"#ccffcc\",\n        17: \"#99ff99\",\n        18: \"#66cc66\",\n        19: \"#99ff99\",\n        20: \"#99ffcc\",\n        21: \"#21FA04\",\n        22: \"#1BC208\",\n        23: \"#16A20A\",\n        24: \"#23F9BE\",\n        25: \"#24FFAE\",\n        26: \"#19AC1E\",\n        27: \"#26FDB5\",\n        28: \"#32F97D\",\n        29: \"#2BFFFF\",\n        30: \"#30FCDE\",\n        31: \"#20DFAA\",\n        32: \"#C6FCF9\",\n        33: \"#21E9CB\",\n        34: \"#1DD0C8\",\n        35: \"#19B295\",\n        36: \"#BFFBFB\",\n        37: \"#1DAECF\",\n        38: \"#1DC9EF\",\n        39: \"#22D6F5\",\n        40: \"#BBF3FB\",\n        41: \"#36DBFD\",\n        42: \"#37AAF4\",\n        43: \"#2EB8FD\",\n        44: \"#AEAFFD\",\n        45: \"#0101FF\",\n        46: \"#5B40ED\",\n        47: \"#4F3BC1\",\n        48: \"#D1C2FD\",\n        49: \"#DDA1FC\",\n        50: \"#B65DED\",\n        51: \"#7D3CB5\",\n        52: \"#F9C8F9\",\n        53: \"#F735F8\",\n        54: \"#F735F8\",\n        55: \"#B824BC\",\n        56: \"#F69FE1\",\n        57: \"#F954FB\",\n        58: \"#E229B3\",\n        59: \"#DC00B8\",\n        60: \"#DD7D35\",\n        61: \"#F6BB28\",\n        62: \"#DBCA12\",\n        63: \"#83CD3C\",\n        64: \"#1ABB10\",\n        65: \"#23F0A5\",\n        66: \"#5962EB\",\n        67: \"#737EFB\",\n        68: \"#29FFFD\",\n        69: \"#AB94FD\",\n        70: \"#F1F4FE\",\n        71: \"#AAA8BB\",\n        72: \"#F72C4E\",\n        73: \"#EFFFDE\",\n        74: \"#D3F846\",\n        75: \"#E1FFDB\",\n        76: \"#25FE13\",\n        77: \"#25FAB4\",\n        78: \"#26DEFA\",\n        79: \"#26DCFD\",\n        80: \"#717AFD\",\n        81: \"#DB5FFC\",\n        82: \"#FCA9FE\",\n        83: \"#C08650\",\n        84: \"#FC8F0D\",\n        85: \"#CAFF58\",\n        86: \"#83F62C\",\n        87: \"#00FF00\",\n        88: \"#21F906\",\n        89: \"#C2FFEF\",\n        90: \"#5AFFFC\",\n        91: \"#C4FFFE\",\n        92: \"#BAFEFD\",\n        93: \"#C0D5FE\",\n        94: \"#FCB2FD\",\n        95: \"#FC5DFD\",\n        96: \"#FC7E09\",\n        97: \"#D8E014\",\n        98: \"#B6FF29\",\n        99: \"#E6DB0F\",\n        100: \"#C9A00E\",\n        101: \"#1CC998\",\n        102: \"#4CFFD1\",\n        103: \"#ABACBE\",\n        104: \"#A4BCFD\",\n        105: \"#FCE6BB\",\n        106: \"#E20011\",\n        107: \"#FDB699\",\n        108: \"#F28E75\",\n        109: \"#F8E376\",\n        110: \"#D1F380\",\n        111: \"#C9FF50\",\n        112: \"#94919D\",\n        113: \"#E7FAD9\",\n        114: \"#BAFFF2\",\n        115: \"#efefFf\",\n        116: \"#EFFFEF\",\n        117: \"#C3E1F2\",\n        118: \"#F2F2F2\",\n        119: \"#FEFEFF\",\n        120: \"#E7000C\",\n        121: \"#BD0610\",\n        122: \"#00ff00\",\n        123: \"#1DC60D\",\n        124: \"#FEFF33\",\n        125: \"#A79E0C\",\n        126: \"#F8A80E\",\n        127: \"#D8680C\"\n    };","import React from 'react';\n\nimport Colours from \"./Colours\";\n\nexport default class Cell extends React.Component {\n    render() {\n        return (\n            <button\n                className={this.props.value === 0 ? \"cell empty\" : \"cell\"}\n                ref={this.props.cellRef} row={this.props.row}\n                col={this.props.col} onClick={()=>{ this.props.handleClick(this.props)}}\n                onKeyDown={(event) => { this.props.handleKeyDown(event, this.props)}}\n                style={{\"background-color\": Colours[this.props.value]}}\n            >\n                {this.props.value === 0 ? \"\" : this.props.value}\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport Cell from \"./Cell\";\n\nexport default class Row extends React.Component {\n    constructor (props) {\n        super(props);\n        this.row      = props.row ? parseInt(props.row, 10) : 0;\n        this.offset   = this.row * 8;\n        this.numCells = props.numCells || 8;\n    }\n\n    renderSquares() {\n        var renderStack = [];\n        for (var i = 0; i < this.numCells; i++) {\n            renderStack.push(this.renderSquare(i));\n        }\n        return renderStack;\n    }\n\n    renderSquare(i) {\n        return <Cell\n            cellRef={this.props.cellRefs && this.props.cellRefs[i]}\n            value={this.props.cells && this.props.cells[i]}\n            handleKeyDown={this.props.handleKeyDown}\n            handleClick={this.props.handleClick}\n            key={\"cell-\" + (this.offset + i)} col={i} row={this.row}\n        />;\n    }\n\n    render () {\n        return (\n            <div className=\"row\">\n                {this.renderSquares()}\n            </div>            \n        );\n    }\n}","import React from 'react';\nimport Row from \"./Row\";\n\nconst watchedKeys = [\n    \"ArrowUp\",\n    \"ArrowDown\",\n    \"ArrowLeft\",\n    \"ArrowRight\"\n];\n\nexport default class Grid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.numRows  = props.numRows  || 8;\n        this.numCells = props.numCells || 8;\n\n        this.cellRefs = Array(this.numRows);\n\n        for (var rowIndex = 0; rowIndex < this.numRows; rowIndex++) {\n            this.cellRefs[rowIndex] = Array(this.numCells);\n            for (var colIndex = 0; colIndex < this.numRows; colIndex++) {\n                this.cellRefs[rowIndex][colIndex] = React.createRef();\n            }\n        }\n    }\n\n    handleKeyDown(gridComponent, event, cellProps) {\n        if (watchedKeys.indexOf(event.key) !== -1) {\n            var targetRow = cellProps.row;\n            var targetCol = cellProps.col;\n            \n            // ArrowDown\n            if (event.key === \"ArrowDown\") {\n                targetRow = (targetRow + 1) % this.numRows;\n            }\n\n            // ArrowUp\n            else if (event.key === \"ArrowUp\") {\n                targetRow = (targetRow + ( this.numRows - 1)) % this.numRows;\n            }\n\n            // ArrowLeft\n            else if (event.key === \"ArrowLeft\") {\n                targetCol= (targetCol + ( this.numRows - 1)) % this.numCells;\n            }\n\n            // ArrowRight\n            else if (event.key === \"ArrowRight\") {\n                targetCol= (targetCol + 1) % this.numCells;\n            }\n\n            var toFocus = gridComponent.cellRefs[targetRow][targetCol];\n            toFocus.current.focus();\n        }\n    }\n\n    renderRows() {\n        var renderStack = [];\n\n        for (var i = 0; i < this.numRows; i++) {\n            renderStack.push(<Row \n                cellRefs={this.cellRefs[i]}\n                numCells={this.numCells}\n                cells={this.props.grid && this.props.grid[i]}\n                handleKeyDown= {(event, cellProps) => {this.handleKeyDown(this,event, cellProps)}}\n                handleClick={this.props.handleClick} key={\"row-\" + i} row={i}\n            />)\n        }\n        return renderStack;\n\n    }\n    // TODO: Iterate rather than spitting out duplicate lines of HTML\n    render() {\n        return (\n            <div>\n                {this.renderRows()}\n          </div>\n        );\n    }\n  }","import React from 'react';\n\nclass MultiSelectOption extends React.Component {\n    render() {\n        return(\n            <option value={this.props.value}>{this.props.label}</option>\n        );\n    }\n}\n\nexport default class MultiSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            selectedValues: props.selectedValues || []\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // Apparently react can't track the selected attribute of individual options, there's an explicit warning against it.\n    // It seems like you're supposed to listen to changes on select elements instead.\n    handleChange(event) {\n        let selectedValueMap = {};\n        for (let i = 0; i < event.target.options.length; i++) {\n            let singleOption = event.target.options[i];\n            if (singleOption.selected) {\n                selectedValueMap[singleOption.value] = true;\n            }\n        }\n\n        let selectedValues = Object.keys(selectedValueMap);\n        this.setState({\n            selectedValues: selectedValues\n        });\n\n        if (this.props.stateChangeCallbacks) {\n            this.props.stateChangeCallbacks.forEach((callback) => {\n                callback(selectedValues);\n            });\n        }\n    }\n\n    render() {\n        const optionsMarkup = [];\n        const optionsKeys = Object.keys(this.props.options);\n        for (let a = 0; a < optionsKeys.length; a++) {\n            let key = optionsKeys[a];\n            let optionDef = this.props.options[key];\n            optionsMarkup.push(<MultiSelectOption value={optionDef.value} key={\"option-\" + key} label={(optionDef.label || optionDef.value)}/>);\n        }\n        return (\n            <div>\n                <h2>{this.props.title}</h2>\n                <select multiple={true} onChange={this.handleChange} defaultValue={this.props.defaultValue}>\n                    {optionsMarkup}\n                </select>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport MultiSelect from './MultiSelect';\n\nlet fluid = {};\n\n// Very naive replacement for `fluid.copy`.\nfluid.copy = function (original) {\n    return JSON.parse(JSON.stringify(original));\n}\n\nexport default class MidiPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Give the enclosing puzzle some way to listen to and react to MIDI inputs.\n        // TODO: Remove this once we allow the Puzzle to send messages instead.\n        this.sendMidiMessage = this.sendMidiMessage.bind(this);\n        this.inputListeners = props.inputListeners || [this.sendMidiMessage];\n        this.outputChangeListeners = props.outputChangeListeners || [];\n\n        // Provide some means of letting this component transmit MIDI messages received from \"outside\".\n        if (props.outputAccumulator) {\n            props.outputAccumulator(this.sendMidiMessage);\n        }\n\n        this.outputPorts = {};\n        this.state={\n            inputDefs: {},\n            selectedInputs: [],\n            outputDefs: {},\n            selectedOutputs: []\n        }\n\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.updateSelectedInputs = this.updateSelectedInputs.bind(this);\n        this.updateSelectedOutputs = this.updateSelectedOutputs.bind(this);\n\n        // Read the initial set of ports and wire up our state change listener.\n        let midiAccessPromise = navigator.requestMIDIAccess({ sysex: true});\n        midiAccessPromise.then( (access) => {\n            const inputs = access.inputs.values();\n            let inputDefs = {};\n            for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n                inputDefs[input.value.id] = {\n                    label: input.value.name,\n                    value: input.value.id\n                };\n\n                // Wire up our common handler function to catch this input's MIDI messages.\n                input.value.onmidimessage = (data) => { this.handleMidiInput(input.value.id, data);};\n            }\n            this.setState({ inputDefs: inputDefs });\n\n            let outputDefs = {};\n            const outputs = access.outputs.values();\n            for (let output = outputs.next(); output && !output.done; output = outputs.next()) {\n                outputDefs[output.value.id] = {\n                    label: output.value.name,\n                    value: output.value.id\n                };\n\n                // Since we need to \"send\" to the objects, stash them for later use.\n                this.outputPorts[output.value.id] = output.value;\n            };\n\n            this.setState({ outputDefs: outputDefs });\n\n            access.addEventListener(\"statechange\", this.handleStateChange);\n        });\n    }\n\n    updateSelectedInputs(selectedInputs) {\n        this.setState({selectedInputs: selectedInputs});\n    }\n\n    updateSelectedOutputs(selectedOutputs) {\n        this.setState({selectedOutputs: selectedOutputs});\n        this.outputChangeListeners.forEach((callback) => {\n            callback();\n        });\n    }\n\n    handleStateChange(event) {\n        let changedPort = event.port;\n\n        let defsToUpdate = changedPort.type === \"input\" ? \"inputDefs\" : \"outputDefs\";\n        let updatedDefs =fluid.copy(this.state[defsToUpdate]);\n\n        if (changedPort.state === \"connected\") {\n            updatedDefs[changedPort.id] = {\n                label: changedPort.name,\n                value: changedPort.id\n            }\n        }\n        else {\n            delete updatedDefs[changedPort.id];\n        }\n\n        let updatedStateFragment = {};\n        updatedStateFragment[defsToUpdate] = updatedDefs;\n        this.setState(updatedStateFragment);\n    }\n    \n    handleMidiInput (inputId, midiMessageEvent) {\n        // Confirm that this input is selected.\n        let inputDef = this.state.inputDefs[inputId];\n        let inputSelected = this.state.selectedInputs.indexOf(inputId) !== -1;\n        if (inputDef && inputSelected && this.inputListeners.length) {\n            let dataAsJson = flock.midi.read(midiMessageEvent.data);\n            this.inputListeners.forEach((inputListener) => {\n                inputListener(dataAsJson);\n            });\n        }\n    }\n\n    sendMidiMessage (dataAsJson) {\n        let outputIds = Object.keys(this.state.outputDefs);\n        let data = flock.midi.write(dataAsJson);\n        outputIds.forEach((outputId) => {\n            let outputSelected = this.state.selectedOutputs.indexOf(outputId) !== -1;\n\n            if (outputSelected) {\n                let outputPort = this.outputPorts[outputId];\n                outputPort.send(data);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div class=\"midi-panel\">\n                <MultiSelect title=\"Inputs\"  options={this.state.inputDefs}  selectedValues={this.state.selectedInputs} stateChangeCallbacks={[this.updateSelectedInputs]}/>\n                <MultiSelect title=\"Outputs\" options={this.state.outputDefs} selectedValues={this.state.selectedOutputs} stateChangeCallbacks={[this.updateSelectedOutputs]}/>\n            </div>\n        )\n    }\n}\n\n// Pure JS version of functions copied from flocking-midi: https://github.com/continuing-creativity/flocking-midi/blob/master/src/core.js\n// TODO: Replace this once Fluid and Flocking support ES6.\n\n// Pure JS equivalent of several `fluid.registerNamespace` calls.\nlet flock = {};\nflock.midi = {};\n\nflock.midi.read = function (data) {\n    let status = data[0],\n        type = status >> 4,\n        channel = status & 0xf,\n        fn;\n\n    switch (type) {\n        case 8:\n            fn = flock.midi.read.noteOff;\n            break;\n        case 9:\n            fn = data[2] > 0 ? flock.midi.read.noteOn : flock.midi.read.noteOff;\n            break;\n        case 10:\n            fn = flock.midi.read.polyAftertouch;\n            break;\n        case 11:\n            fn = flock.midi.read.controlChange;\n            break;\n        case 12:\n            fn = flock.midi.read.programChange;\n            break;\n        case 13:\n            fn = flock.midi.read.channelAftertouch;\n            break;\n        case 14:\n            fn = flock.midi.read.pitchbend;\n            break;\n        case 15:\n            fn = flock.midi.read.system;\n            break;\n        default:\n            return flock.fail(\"Received an unrecognized MIDI message: \" +\n                JSON.stringify(data));\n    }\n\n    return fn(channel, data);\n};\n\n// Unsupported, non-API function.\nflock.midi.read.note = function (type, channel, data) {\n    return {\n        type: type,\n        channel: channel,\n        note: data[1],\n        velocity: data[2]\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.noteOn = function (channel, data) {\n    return flock.midi.read.note(\"noteOn\", channel, data);\n};\n\n// Unsupported, non-API function.\nflock.midi.read.noteOff = function (channel, data) {\n    return flock.midi.read.note(\"noteOff\", channel, data);\n};\n\n// Unsupported, non-API function.\nflock.midi.read.polyAftertouch = function (channel, data) {\n    return {\n        type: \"aftertouch\",\n        channel: channel,\n        note: data[1],\n        pressure: data[2]\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.controlChange = function (channel, data) {\n    return {\n        type: \"control\",\n        channel: channel,\n        number: data[1],\n        value: data[2]\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.programChange = function (channel, data) {\n    return {\n        type: \"program\",\n        channel: channel,\n        program: data[1]\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.channelAftertouch = function (channel, data) {\n    return {\n        type: \"aftertouch\",\n        channel: channel,\n        pressure: data[1]\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.twoByteValue = function (data) {\n    return (data[2] << 7) | data[1];\n};\n\n// Unsupported, non-API function.\nflock.midi.read.pitchbend = function (channel, data) {\n    return {\n        type: \"pitchbend\",\n        channel: channel,\n        value: flock.midi.read.twoByteValue(data)\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.system = function (status, data) {\n    if (status === 1) {\n        return flock.midi.messageFailure(\"quarter frame MTC\");\n    }\n\n    let fn;\n    switch (status) {\n        case 0:\n            fn = flock.midi.read.sysex;\n            break;\n        case 2:\n            fn = flock.midi.read.songPointer;\n            break;\n        case 3:\n            fn = flock.midi.read.songSelect;\n            break;\n        case 6:\n            fn = flock.midi.read.tuneRequest;\n            break;\n        case 8:\n            fn = flock.midi.read.clock;\n            break;\n        case 10:\n            fn = flock.midi.read.start;\n            break;\n        case 11:\n            fn = flock.midi.read[\"continue\"];\n            break;\n        case 12:\n            fn = flock.midi.read.stop;\n            break;\n        case 14:\n            fn = flock.midi.read.activeSense;\n            break;\n        case 15:\n            fn = flock.midi.read.reset;\n            break;\n        default:\n            return flock.fail(\"Received an unrecognized MIDI system message: \" +\n                JSON.stringify(data));\n    }\n\n    return fn(data);\n};\n\n// Unsupported, non-API function.\nflock.midi.messageFailure = function (type) {\n    flock.fail(\"Flocking does not currently support MIDI \" + type + \" messages.\");\n    return;\n};\n\n// Unsupported, non-API function.\nflock.midi.read.sysex = function (data) {\n    let begin = data[0] === 0xF0 ? 1 : 0,\n        end = data.length - (data[data.length - 1] === 0xF7 ? 1 : 0);\n\n    // Avoid copying the data if we're working with a typed array.\n    let trimmedData = data instanceof Uint8Array ?\n        data.subarray(begin, end) :\n        data.slice(begin, end);\n\n    return {\n        type: \"sysex\",\n        data: trimmedData\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.valueMessage = function (type, value) {\n    return {\n        type: type,\n        value: value\n    };\n};\n\n// Unsupported, non-API function.\nflock.midi.read.songPointer = function (data) {\n    let val = flock.midi.read.twoByteValue(data);\n    return flock.midi.read.valueMessage(\"songPointer\", val);\n};\n\n// Unsupported, non-API function.\nflock.midi.read.songSelect = function (data) {\n    return flock.midi.read.valueMessage(\"songSelect\", data[1]);\n};\n\n// Unsupported, non-API function.\nflock.midi.read.tuneRequest = function () {\n    return {\n        type: \"tuneRequest\"\n    };\n};\n\nflock.midi.systemRealtimeMessages = [\n    \"tuneRequest\",\n    \"clock\",\n    \"start\",\n    \"continue\",\n    \"stop\",\n    \"activeSense\",\n    \"reset\"\n];\n\n// Unsupported, non-API function.\nflock.midi.createSystemRealtimeMessageReaders = function (systemRealtimeMessages) {\n    // Modified to avoid use of `fluid.each`.\n    systemRealtimeMessages.forEach((type) => {\n        flock.midi.read[type] = function () {\n            return {\n                type: type\n            };\n        };\n    })\n};\n\n// Unsupported, non-API function.\nflock.midi.createSystemRealtimeMessageReaders(flock.midi.systemRealtimeMessages);\n\n\n/**\n *\n * Take a MIDI messageSpec object and convert it to an array of raw bytes suitable for sending to a MIDI device.\n *\n * @param {Object} midiMessage a MIDI messageSpec object\n * @return {Uint8Array} - an array containing the encoded MIDI message's bytes\n *\n */\nflock.midi.write = function (midiMessage) {\n    if (midiMessage.type === \"sysex\") {\n        return flock.midi.write.sysex(midiMessage);\n    }\n\n    // MIDI status nibbles are helpfully documented in this\n    // SparkFun article:\n    // https://learn.sparkfun.com/tutorials/midi-tutorial/all#messages\n    switch (midiMessage.type) {\n        case \"noteOn\":\n            return flock.midi.write.note(9, midiMessage);\n        case \"noteOff\":\n            return flock.midi.write.note(8, midiMessage);\n        case \"aftertouch\":\n            return flock.midi.write.aftertouch(midiMessage);\n        case \"control\":\n            return flock.midi.write.controlChange(midiMessage);\n        case \"program\":\n            return flock.midi.write.programChange(midiMessage);\n        case \"pitchbend\":\n            return flock.midi.write.largeValueMessage(14, midiMessage.channel, midiMessage);\n        case \"songPointer\":\n            return flock.midi.write.largeValueMessage(15, 2, midiMessage);\n        case \"songSelect\":\n            return flock.midi.write.largeValueMessage(15, 3, midiMessage);\n        case \"tuneRequest\":\n            return flock.midi.write.singleByteMessage(15, 6);\n        case \"clock\":\n            return flock.midi.write.singleByteMessage(15, 8);\n        case \"start\":\n            return flock.midi.write.singleByteMessage(15, 10);\n        case \"continue\":\n            return flock.midi.write.singleByteMessage(15, 11);\n        case \"stop\":\n            return flock.midi.write.singleByteMessage(15, 12);\n        case \"activeSense\":\n            return flock.midi.write.singleByteMessage(15, 14);\n        case \"reset\":\n            return flock.midi.write.singleByteMessage(15, 15);\n        default:\n            flock.fail(\"Cannot write an unrecognized MIDI message of type '\" + midiMessage.type + \"'.\");\n    }\n};\n\n// Unsupported, non-API function.\nflock.midi.write.note = function (status, midiMessage) {\n    return flock.midi.write.threeByteMessage(status, midiMessage.channel,\n        midiMessage.note, midiMessage.velocity);\n};\n\n// Unsupported, non-API function.\nflock.midi.write.controlChange = function (midiMessage) {\n    return flock.midi.write.threeByteMessage(11, midiMessage.channel,\n        midiMessage.number, midiMessage.value);\n};\n\n// Unsupported, non-API function.\nflock.midi.write.programChange = function (midiMessage) {\n    return flock.midi.write.twoByteMessage(12, midiMessage.channel, midiMessage.program);\n};\n\n// Unsupported, non-API function.\nflock.midi.write.aftertouch = function (midiMessage) {\n    // polyAfterTouch\n    if (midiMessage.note) {\n        return flock.midi.write.note(10, midiMessage);\n    }\n\n    // afterTouch\n    return flock.midi.write.twoByteMessage(13, midiMessage.channel, midiMessage.pressure);\n};\n\n// Unsupported, non-API function.\nflock.midi.write.singleByteMessage = function (msNibble, lsNibble) {\n    let data = new Uint8Array(1);\n    data[0] = flock.midi.write.statusByte(msNibble, lsNibble);\n    return data;\n};\n\n// Unsupported, non-API function.\nflock.midi.write.twoByteMessage = function (msNibble, lsNibble, data1) {\n    let data = new Uint8Array(2);\n    data[0] = flock.midi.write.statusByte(msNibble, lsNibble);\n    data[1] = data1;\n    return data;\n};\n\n// Unsupported, non-API function.\nflock.midi.write.threeByteMessage = function (msNibble, lsNibble, data1, data2) {\n    let data = new Uint8Array(3);\n    data[0] = flock.midi.write.statusByte(msNibble, lsNibble);\n    data[1] = data1;\n    data[2] = data2;\n    return data;\n};\n\n// Unsupported, non-API function.\nflock.midi.write.largeValueMessage = function (msNibble, lsNibble, midiMessage) {\n    let data = new Uint8Array(3);\n    data[0] = flock.midi.write.statusByte(msNibble, lsNibble);\n    flock.midi.write.twoByteValue(midiMessage.value, data, 1);\n    return data;\n};\n\n/**\n *\n * Output a status byte.\n *\n * @param {Number} msNibble - the first nibble of the status byte (often the command code).\n * @param {Number} lsNibble - the second nibble of the status byte (often the channel).\n * @return {Byte} A status byte that combines the two inputs.\n */\n// Unsupported, non-API function.\nflock.midi.write.statusByte = function (msNibble, lsNibble) {\n    return (msNibble << 4) + lsNibble;\n};\n\n/**\n *\n * Converts a 14-bit numeric value to two MIDI bytes.\n *\n * @param {Number} value - A 14-bit number to convert\n * @param {Unit8TypedArray} array - An array to write the value to.\n * @param {Integer} offset - The optional offset in the array to start writing at.  Defaults to 0.\n *\n */\n// Unsupported, non-API function.\nflock.midi.write.twoByteValue =  function (value, array, offset) {\n    offset = offset || 0;\n    array[offset] = value & 0x7f; // LSB\n    array[offset + 1] = (value >> 7) & 0x7f; // MSB\n};\n\n/**\n *\n * Convert a MIDI Message represented as a Javascript Object into a Sysex message represented as a Uint8Array.\n *\n * NOTE: This function does not accept framing, i.e. a leading 0xF0 and/or trailing 0xF7, and will fail if called\n * with either.\n *\n * @param {Object} midiMessage - The MIDI message represented as a Javascript Object.\n * @return {Uint8Array} - The sysex message.\n */\n// Unsupported, non-API function.\nflock.midi.write.sysex = function (midiMessage) {\n    if (midiMessage.data[0] === 0xF0 || midiMessage.data[midiMessage.data.length - 1] === 0xF7) {\n        flock.fail(\"Sysex payloads should not include framing bytes.\");\n    }\n\n    let data = midiMessage.data,\n        len = data.length;\n\n    let framedData = new Uint8Array(len + 2);\n    framedData[0] = 0xF0;\n    framedData[len + 1] = 0xF7;\n    framedData.set(data, 1);\n\n    return framedData;\n};\n\n// QnD replacement for flock.fail\nflock.fail = function(error) {\n    throw(new Error(error));\n};","import React from 'react';\nimport Grid from \"./Grid\"\nimport MidiPanel from './MidiPanel';\n\nexport default class Puzzle extends React.Component {\n  constructor(props) {\n      super(props);\n      this.outputCallbacks = [];\n      this.state = {\n          grid: [\n              [70,71,72,73,74,75,76,77],\n              [60,61,62,63,64,65,66,67],\n              [50,51,52,53,54,55,56,57],\n              [40,41,42,43,44,45,46,47],\n              [30,31,32,33,34,35,36,37],\n              [20,21,22,23,24,25,26,27],\n              [10,11,12,13,14,15,16,17],\n              [ 0, 1, 2, 3, 4, 5, 6, 7]\n          ]\n      };\n\n      this.registerOutput  = this.registerOutput.bind(this);\n      this.handleMidiInput = this.handleMidiInput.bind(this);\n      this.updateLaunchpad = this.updateLaunchpad.bind(this);\n  }\n\n  // We don't care about the previous values per se, but if we do in the future, the signature is:\n  // componentDidUpdate(object prevProps, object prevState)\n  componentDidUpdate() {\n      this.updateLaunchpad();\n  }\n\n  // TODO: break this out into a \"full\" and \"targeted\" refresh, the latter should only update the row or column that has changed.\n  updateLaunchpad() {\n      if (this.outputCallbacks.length) {\n          var messages = [];\n          for (let row = 0; row < this.state.grid.length; row ++) {\n              let rowCells = this.state.grid[row];\n              for (let col = 0; col < rowCells.length; col++) {\n                  let velocity = this.state.grid[row][col];\n                  // Top row is 81-88, bottom is 11-18\n                  let note = ((8-row) * 10) + col + 1;\n                  messages.push({\n                      type:     \"noteOn\",\n                      channel:  0,\n                      velocity: velocity,\n                      note:     note\n                  });\n              }\n          }\n\n          for (let o = 0; o < this.outputCallbacks.length; o++) {\n              let outputCallback = this.outputCallbacks[o];\n              for (let m = 0; m < messages.length; m++) {\n                  let message = messages[m];\n                  outputCallback(message);\n              }\n          }\n      }\n  }\n\n  registerOutput (outputCallback) {\n      this.outputCallbacks.push(outputCallback);\n  }\n\n  handleMidiInput (midiMessage) {\n      if (midiMessage.type === \"noteOn\") {\n          let col = (midiMessage.note % 10) - 1;\n          let row = 8 - Math.floor(midiMessage.note / 10);\n          this.pushFromSquare(row, col);\n      }\n  }\n\n  pushFromSquare(row, col) {\n    let cellValue = this.state.grid[row][col];\n    // No move is possible if this is the empty square (value of 0).\n    if (cellValue === 0) {\n        // TODO: Add a sound or flash when an invalid key is pressed.\n    }\n    else {\n        var thisRow = this.state.grid[row];\n        var emptyCellColumnIndex = thisRow.indexOf(0);\n        \n        // We can shift pieces horizontally if our row contains the empty square.\n        if (emptyCellColumnIndex !== -1) {\n            var rowShiftedState = this.state.grid.slice();\n\n            // Rearrange the row so that the clicked position is now the empty square.            \n            var shiftedRow = this.shiftArray(thisRow, emptyCellColumnIndex, col);\n            rowShiftedState[row] = shiftedRow;\n\n            this.setState({grid: rowShiftedState});\n        }\n        else {\n            // Check to see if our column contains the empty sqare\n            var thisColumn = this.extractCol(col);\n            var emptyCellRowIndex = thisColumn.indexOf(0);\n            \n            // We can shift pieces vertically if our column contains the empty square.\n            if (emptyCellRowIndex !== -1) {\n                var columnShiftedState = this.state.grid.slice();\n                \n                // Rearrange the column so that the clicked position is now the empty square.\n                var shiftedColumn = this.shiftArray(thisColumn, emptyCellRowIndex, row);\n\n                for (var rowIndex = 0; rowIndex < this.state.grid.length; rowIndex++) {\n                    columnShiftedState[rowIndex][col] = shiftedColumn[rowIndex];\n                }\n\n                // Save the updated state            \n                this.setState({ grid: columnShiftedState})\n            }            \n            else {\n                // TODO: Add a sound or flash when an invalid key is pressed.\n            }\n        }\n    }\n  }\n\n  handleClick(cellProps) {\n    this.pushFromSquare(cellProps.row, cellProps.col);\n  }\n  \n  // TODO: Write tests with these and other patterns.\n  // *1 2 3 4 0 5 6 7 8 => 0 1 2 3 4 5 6 7 8\n  // 1 2 *3 4 0 5 6 7 8 => 1 2 0 3 4 5 6 7 8\n  // 1 2 3 4 0 5 6 7 *8 => 1 2 3 4 5 6 7 8 0\n  // 1 2 3 4 0 5 6 *7 8 => 1 2 3 4 5 6 7 0 8\n  shiftArray(originalArray, emptySpaceIndex, clickedEntryIndex) {\n      var shiftedArray = originalArray.slice();\n      \n      // Remove the previous empty space\n      shiftedArray.splice(emptySpaceIndex, 1);\n\n      // Add an empty space at the clicked position.\n      shiftedArray.splice(clickedEntryIndex, 0, 0)\n      return shiftedArray;\n  }\n\n  extractCol(colIndex) {\n      var columnCells = [];\n      for (var rowIndex = 0; rowIndex < this.state.grid.length; rowIndex++) {\n          columnCells.push(this.state.grid[rowIndex][colIndex]);\n      }\n      return columnCells;\n  }\n\n  render() {\n      return (\n      <div className=\"puzzle\">\n        <Instructions/>\n        <div className=\"grid\">\n          <Grid grid={this.state.grid}\n              handleClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <MidiPanel\n            outputAccumulator={this.registerOutput}\n            inputListeners={[this.handleMidiInput]}\n            outputChangeListeners={[this.updateLaunchpad]}\n        />\n      </div>\n    );\n  }\n}\n\nfunction Instructions (props) {\n    return(\n      <div className=\"instructions\">\n        <p>This is a simple sliding puzzle.  You can use tabs or arrow keys to navigate.</p>\n        <p>Click (or hit enter) on any square that shares a row with the empty square to \"slide\" one or more squares in its direction.</p>\n      </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Puzzle from './Puzzle';\n\nReactDOM.render(\n    <Puzzle />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}